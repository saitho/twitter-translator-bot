export function normalizeLanguageCode(languageCode: string): string {
    return languageCode.toUpperCase().replace('_', '-')
}

export function getFlag(targetLanguage: string): string {
    targetLanguage = normalizeLanguageCode(targetLanguage)
    const flags: {[languageCode: string]: string} = {
        BG: 'ğŸ‡§ğŸ‡¬',
        CS: 'ğŸ‡¨ğŸ‡¿',
        DA: 'ğŸ‡©ğŸ‡°',
        DE: 'ğŸ‡©ğŸ‡ª',
        EL: 'ğŸ‡¬ğŸ‡·',
        'EN-GB': 'ğŸ‡¬ğŸ‡§',
        'EN-US': 'ğŸ‡ºğŸ‡¸',
        EN: 'ğŸ‡¬ğŸ‡§',
        ES: 'ğŸ‡ªğŸ‡¸',
        ET: 'ğŸ‡ªğŸ‡ª',
        FI: 'ğŸ‡«ğŸ‡®',
        FR: 'ğŸ‡«ğŸ‡·',
        HU: 'ğŸ‡­ğŸ‡º',
        IT: 'ğŸ‡®ğŸ‡¹',
        JA: 'ğŸ‡¯ğŸ‡µ',
        LT: 'ğŸ‡±ğŸ‡¹',
        LV: 'ğŸ‡±ğŸ‡»',
        NL: 'ğŸ‡³ğŸ‡±',
        PL: 'ğŸ‡µğŸ‡±',
        'PT-PT': 'ğŸ‡µğŸ‡¹',
        'PT-BR': 'ğŸ‡§ğŸ‡·',
        PT: 'ğŸ‡µğŸ‡¹',
        RO: 'ğŸ‡·ğŸ‡´',
        RU: 'ğŸ‡·ğŸ‡º',
        SK: 'ğŸ‡¸ğŸ‡°',
        SL: 'ğŸ‡¸ğŸ‡®',
        SV: 'ğŸ‡¸ğŸ‡ª',
        ZH: 'ğŸ‡¨ğŸ‡³',
    }
    if (Object.keys(flags).indexOf(targetLanguage) === -1) {
        return ''
    }
    return flags[targetLanguage]
}


/**
 * @param text
 */
export function isTranslatable(text: string): boolean {
    const translatableExpression = process.env.TRANSLATABLE_MATCH_EXPRESSION || '[a-zA-Z]+'
    return text.match(new RegExp(translatableExpression)) != null
}
